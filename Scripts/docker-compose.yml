services:
  user-service:
    build:
      context: ..
      dockerfile: ./scripts/UserService.Dockerfile
      args:
        - BUILD_CONFIG=${BUILD_CONFIG:-Release}
    ports:
      - "5001:8080"
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Production}
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=UserService;Username=postgres;Password=postgres
    networks:
      - user-net

  notification-service:
    build:
      context: ..
      dockerfile: ./scripts/NotificationService.Dockerfile
      args:
        - BUILD_CONFIG=${BUILD_CONFIG:-Release}
    ports:
      - "5002:8080"
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Production}
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=NotificationService;Username=postgres;Password=postgres
      - Kafka__BootstrapServers=kafka:9092
    networks:
      - user-net

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=UserService
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - user-net
  
  kafka:
  image: confluentinc/cp-kafka:7.5.0
  depends_on:
    - zookeeper
  ports:
    - "9092:9092"
  environment:
    KAFKA_BROKER_ID: 1
    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  networks:
    - user-net

zookeeper:
  image: confluentinc/cp-zookeeper:7.5.0
  ports:
    - "2181:2181"
  environment:
    ZOOKEEPER_CLIENT_PORT: 2181
  networks:
    - user-net


networks:
  user-net:
    driver: bridge

volumes:
  pgdata:
